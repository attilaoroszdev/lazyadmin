#!/bin/bash
#
# Copyright Â© 2017-2025, Attila Orosz
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Any functions distrubuted with Lazy Adming, which have external
# dependencies (other than sed), will live here

declare VALID_EDITOR=false

check_editor() { 
    clear

    if [[ $DEFAULT_EDITOR == "not set" ]]; then
        echo "Interactive setup might not might not be implemented in a later version."
        echo "Until then, you can easily access the config files from here."
        echo
        echo "First you'll need to select your preferred editor."
        echo "You can change it later by editing user-defaults.la (see configuration guide)"
        echo
        echo "These are ome of the available text editors on this system."
        echo "Pick a letter:"
        echo

        while true; do

            if hash nano 2>/dev/null; then
                echo "n - nano"
            fi

            if hash micro 2>/dev/null; then
                echo "m - micro"
            fi

            if hash vi 2>/dev/null; then
                echo "v - vi"
            fi

            if hash vim 2>/dev/null; then
                echo "V - vim"
            fi

            if hash emacs 2>/dev/null; then
                echo "e - emacs"
                echo "E - emacs --no-window"
            fi

            echo "c - Custom editor or command"
            echo "x - Cancel"
            tput cnorm
            read -p "> " -n 1 editor_preference
            tput civis

            VALID_EDITOR=false
            local should_save_choice=false
            case $editor_preference in
                'c')
                    echo
                    echo "Please type in your preferred editor command, with any parameters applicable BEFORE the editable filename"
                    echo
                    tput cnorm
                    read -p "> " editor_preference
                    tput civis

                    function_exists $editor_preference

                    if [[ $? == 0 ]]; then
                        VALID_EDITOR=true
                        should_save_choice=true
                        break
                    else
                        clear
                        echo
                        echo "That package does not seem to be installed. Try again:"
                        echo
                    fi
                    
                    ;;
                'n')
                    editor_preference="nano"
                    VALID_EDITOR=true
                    should_save_choice=true
                    break
                    ;;
                'm')
                    editor_preference="micro"
                    VALID_EDITOR=true
                    should_save_choice=true
                    break
                    ;;
                'v')
                    editor_preference="vi"
                    VALID_EDITOR=true
                    should_save_choice=true
                    break
                    ;;
                'V')
                    editor_preference="vim"
                    VALID_EDITOR=true
                    should_save_choice=true
                    break
                    ;;
                'e')
                    editor_preference="emacs"
                    VALID_EDITOR=true
                    should_save_choice=true
                    break
                    ;;
                'E')
                    editor_preference="emacs --no-window"
                    VALID_EDITOR=true
                    should_save_choice=true
                    break
                    ;;
                'x' | 'X')
                    echo
                    echo -e "\nOK then, bye..."
                    echo
                    break
                    ;;
                *) 
                    clear
                    echo 
                    echo "That was not an option. Try again."
                    echo
                    ;;
            esac

        done


        if $VALID_EDITOR; then
            DEFAULT_EDITOR=$editor_preference

            if $should_save_choice; then
                local filename="$USER_DIR/user-defaults.la"
                local file_contents=$(<"$filename")
                local modified_content="${file_contents/"DEFAULT_EDITOR=\"not set\""/"DEFAULT_EDITOR=\"$DEFAULT_EDITOR\""}"
                echo "$modified_content" > "$filename"
            fi


        fi
    elif hash $DEFAULT_EDITOR 2>/dev/null; then
        VALID_EDITOR=true
    fi
}


edit_setup_file() { 
    check_editor
    if $VALID_EDITOR; then
        $DEFAULT_EDITOR $1
    fi
    tput civis
}

functsetup1() { 
    edit_setup_file "$USER_DIR/menu-entries.la"
}


functsetup2() { 
    edit_setup_file "$USER_DIR/user-functions.la"
}


functsetup3() { 
    edit_setup_file "$USER_DIR/user-defaults.la"
}


